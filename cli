#!/usr/bin/env php
<?php

define('BAULT_START', microtime(true));
error_log("==> [CLI] Execution started.");

// 1. Autoloader
require_once __DIR__.'/vendor/autoload.php';
error_log("==> [CLI] Autoloader included.");

// 2. Environment
try {
    $dotenv = Dotenv\Dotenv::createImmutable(__DIR__);
    $dotenv->load();
    error_log("==> [CLI] .env file loaded.");
} catch (\Throwable $e) {
    error_log("==> [CLI] ERROR: Could not load .env file: " . $e->getMessage());
    exit(1);
}

// 3. Application Bootstrap
error_log("==> [CLI] Bootstrapping application from bootstrap/app.php...");
try {
    /** @var \Core\Application $app */
    $app = require_once __DIR__.'/bootstrap/app.php';
    error_log("==> [CLI] Application bootstrapped successfully. AppKernel finished.");
} catch (\Throwable $e) {
    error_log("==> [CLI] FATAL ERROR during bootstrap: " . $e->getMessage() . "\n" . $e->getTraceAsString());
    exit(1);
}

// 4. Console Kernel Logic
global $argv;
$inputSignature = $argv[1] ?? null;
error_log("==> [CLI] Input signature: " . ($inputSignature ?? 'null'));

if (!$inputSignature) {
    echo "BaultFrame Console\n\nUsage:\n  command [options] [arguments]\n\n";
    error_log("==> [CLI] No command provided. Displaying usage info.");
    exit(0);
}

try {
    // Lấy danh sách các lớp command từ ConsoleServiceProvider
    $consoleProvider = new \App\Providers\ConsoleServiceProvider($app);
    $reflector = new \ReflectionClass($consoleProvider);
    $commandsProperty = $reflector->getProperty('commands');
    $commandClasses = $commandsProperty->getValue($consoleProvider);
    error_log("==> [CLI] Found " . count($commandClasses) . " command classes from ConsoleServiceProvider.");

    $matchedCommand = null;
    foreach ($commandClasses as $commandClass) {
        /** @var \Core\Console\Contracts\CommandInterface $commandInstance */
        $commandInstance = $app->make($commandClass);
        $signature = $commandInstance->signature();
        error_log("    -> Checking signature: " . $signature);

        // Tách tên lệnh chính ra khỏi các tham số. Ví dụ: 'make:command {name}' -> 'make:command'
        $baseSignature = preg_split('/[\s{]/', $signature, 2)[0];

        if ($baseSignature === $inputSignature) {
            $matchedCommand = $commandInstance;
            error_log("==> [CLI] Matched command: " . $commandClass);
            break;
        }
    }

    if ($matchedCommand) {
        error_log("==> [CLI] Executing handle() for " . get_class($matchedCommand));
        $matchedCommand->handle(array_slice($argv, 2));
        error_log("==> [CLI] Command execution finished.");
    } else {
        echo "Command \"$inputSignature\" is not defined.\n";
        error_log("==> [CLI] No command matched the signature \"$inputSignature\".");
    }
} catch (\Throwable $e) {
    error_log("==> [CLI] FATAL ERROR during command dispatch: " . $e->getMessage() . "\n" . $e->getTraceAsString());
    if ($app->resolved(\App\Exceptions\Handler::class)) {
        $app->make(\App\Exceptions\Handler::class)->handle($e);
    }
    exit(1);
}

exit(0);